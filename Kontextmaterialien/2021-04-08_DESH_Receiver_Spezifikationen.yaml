openapi: 3.0.3
info:
  title: DESH
  version: 0.12.0
servers:
  - url: https://demo.desh.bdr.de
    description: Demo System
paths:
  /auth/realms/DESH/protocol/openid-connect/token:
    post:
      tags:
        - Authorization
      summary: get token from IAM
      operationId: getToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/iamBody"
      responses:
        200:
          description: all successful!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/iamResponse"
        400:
          description: wrong or empty body
        405:
          description: method not allowed
        500:
          description: internal server error

  /api/v1/tan:
    get:
      tags:
        - Tan Generation
      summary: generates needed count of tans - max count per request = 10000
      operationId: tan_generation
      security:
        - token: [ ]
      parameters:
        - in: query
          name: count
          schema:
            type: integer
            minimum: 1
            maximum: 10000
          description: number of requested tans
      responses:
        200:
          description: all successful!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tanResponse"
        401:
          description: token is missing
        403:
          description: user is not allowed to generated tans
        405:
          description: method not allowed
        500:
          description: internal server error

  /api/v1/receiver/lookup:
    get:
      tags:
        - Lookups
      summary: get the list of registered lookups
      operationId: lookupList
      security:
        - token: [ ]
      responses:
        200:
          description: all successful!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookupListResponse"
        401:
          description: token is missing
        403:
          description: user is not allowed get the spec, only provider and administrator role are able to do so
        405:
          description: method not allowed
        500:
          description: internal server error

  /api/v1/receiver/lookup/{lookup}:
    get:
      tags:
        - Lookups
      summary: get data of lookup
      operationId: lookup
      security:
        - token: [ ]
      parameters:
        - in: path
          name: lookup
          schema:
            type: string
          required: true
          description: the lookup name for which data is needed
      responses:
        200:
          description: all successful!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lookupResponse"
        401:
          description: token is missing
        403:
          description: user is not allowed get the spec, only provider and administrator role are able to do so
        404:
          description: lookup not found
        405:
          description: method not allowed
        500:
          description: internal server error

  /api/v1/receiver/schema/{schema}:
    post:
      tags:
        - Data
      summary: send data to receiver api
      operationId: send
      parameters:
        - in: path
          name: schema
          schema:
            type: string
          required: true
          example: sequence-data
          description: the schema name to which data should send to
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/receiverBody"
      security:
        - token: [ ]
      responses:
        200:
          description: all successful!
        400:
          description: wrong (data does not fit specification) or empty json body
        401:
          description: token is missing
        403:
          description: user is not allowed send new data, only provider role is able to do so
        405:
          description: method not allowed
        500:
          description: internal server error

  /api/v1/receiver/schema/{schema}/bulk:
    post:
      tags:
        - Data
      summary: "send data to receiver api as bulk operation (max number of items: 1500)"
      operationId: sendBulk
      parameters:
        - in: path
          name: schema
          schema:
            type: string
          required: true
          example: sequence-data
          description: the schema name to which data should send to
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: "max size: 1500 items"
              items:
                allOf:
                  - $ref: "#/components/schemas/receiverBody"
                  - $ref: "#/components/schemas/receiverBulkId"
      security:
        - token: [ ]
      responses:
        200:
          description: all successful!
        207:
          description: some data is not valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedBulkItems"
        400:
          description: wrong (data does not fit specification) or empty json body or limit of max items reached
        401:
          description: token is missing
        403:
          description: user is not allowed send new data, only provider role is able to do so
        405:
          description: method not allowed
        500:
          description: internal server error

  /api/v1/receiver/schema/{schema}/spec:
    get:
      tags:
        - Data
      summary: get the schema specification
      operationId: spec
      parameters:
        - in: path
          name: schema
          schema:
            type: string
          required: true
          example: sequence-data
          description: the schema name to which data should send to
      security:
        - token: [ ]
      responses:
        200:
          description: all successful!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/specBody"
        401:
          description: token is missing
        403:
          description: user is not allowed get the spec, only provider role is able to do so
        405:
          description: method not allowed
        500:
          description: internal server error

components:
  securitySchemes:
    token:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    tanResponse:
      type: object
      properties:
        tans:
          type: array
          items:
            type: string
            example: 77bbeab5-f459-4375-b569-92fbb12a70f6

    iamBody:
      type: object
      properties:
        client_id:
          type: string
          example: desh-api
        client_secret:
          type: string
          example: 8245c565-535f-4ded-aeb1-20e4c8c2ed32
        username:
          type: string
          example: user@lab1.de
        password:
          type: string
          example: Lab-1234
        scope:
          type: string
          example: openid
        grant_type:
          type: string
          example: password

    iamResponse:
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: integer
        refresh_expires_in:
          type: integer
        refresh_token:
          type: string
        token_type:
          type: string
        id_token:
          type: string
        not-before-policy:
          type: integer
        session_state:
          type: string
        scope:
          type: string

    lookupListResponse:
      type: array
      items:
        type: string

    lookupResponse:
      type: array
      items:
        type: object

    receiverBody:
      type: object
      properties:
        psn:
          type: string
          example: IMS-Value-CVDP-d5866c7b-6d09-45a1-ba4f-d44981fcf166
        timestamp:
          type: string
          format: date-time
          description: date-time with timezone ("Z" for UTC and +01:00 for UTC+01:00)
        idat:
          type: object
          description: object of idat data, which fit to specification
          example:
            own_fasta_id: own-fasta-id
        mdat:
          type: object
          description: object of mdat data, which fit to specification
          example:
            reporting_lab: lab1
            sending_lab: lab2
            study: CVDP
            seq_type: seq_type
            seq_reason: seq_reason
            sample_type: sample_type
            sequence: ACGTURYKMSWBDHVN
            date_draw: 20060102
            publication_status: X

    receiverBulkId:
      type: object
      properties:
        _id:
          type: object
          description: for referencing, which data has possible failed; type can be any (e.g. a string)

    failedBulkItems:
      type: array
      items:
        allOf:
          - type: object
            properties:
              error:
                type: string
                example: check residence not succeeded
          - $ref: "#/components/schemas/receiverBulkId"

    specBody:
      type: object
      properties:
        name:
          type: string
        idatFields:
          type: object
          properties:
            idat-field:
              type: object
              properties:
                "type":
                  type: string
                optional:
                  type: boolean
                valid:
                  description: regex or accepted data
                  type: array
                  items:
                    type: string
        mdatFields:
          type: object
          properties:
            mdat-field:
              type: object
              properties:
                "type":
                  type: string
                optional:
                  type: boolean
                valid:
                  description: regex or accepted data
                  type: array
                  items:
                    type: string
